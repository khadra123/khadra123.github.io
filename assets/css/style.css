 :root{
     --primary-color:#fce138;
     --secondary-color:#024e76;
     --tetiary-color:#39a6b2;
 }
 *{
     margin: 0;
     padding: 0;
     box-sizing:border-box; /*this gets rid of the issue of mixed padding values and width. Ex the header has 35px right and left which equals 70 but the footer width is at 100% making it flow off the page*/
 }

 body {
     /*setting the color of the font for the entire page to that hexadecimal number */
     color: var(--tetiary-color);
     font-family: Helvetica, Arial, sans-serif;
    }
 
 /* Applies 20px to every side (top, right, bottom, left) */
 header {
    padding: 20px 35px;
    background-color: var(--tetiary-color);
    display: flex;/*the flex distributes the space amoung the child elements and overrides the block-level behaviours of the elements*/
    justify-content: space-between; /*this puts all of the unused space in the header value betwn the two elements (nav and h1) and determines the unsued spave by adding up the border-width, margin, padding and content of each child element and if deosn't equal 100% then whatever is left over is considered unused*/
    flex-wrap: wrap; /*instructs the container to let chid elements break onto the next line when they don't fit on one line*/
    position:-webkit-sticky;/*Vendor prefix for safari in this case and it comes first before the standardized sticky version*/
    position: sticky;/*Sticks the header so that it scrolls with the page*/
    top: 0;
    background-image: url("../images/hero-bg.jpg");
    background-size: cover;
    background-position: center;
    background-attachment: fixed;/*This and background position below are also in the .hero section and allow the image to be placed in the same place*/
    background-position: 80%;
    z-index: 9999;/*This keeps the header at the forefront so other elements don't overlap it and it is at 9999 to ensure it always stays on the forefront though using 1 can work but may lead to some problems down the line*/
    }
 
header h1 {
    font-weight: bold;
    font-size: 36px;
    color: var(--primary-color);
    margin: 0;
    }

header a {
    text-decoration: none;
    color: var(--primary-color);
}

header nav{
    margin: 7px 0;
}

header nav ul{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;/* horizontally centers the content; follows the main axis*/
    align-items: center; /* vertically centers the content; follows the cross axis*/
    list-style: none;/*sets how a listitems is styles and positioned; aka the actual browser window size. So by added 1.55 we are telling the browswe that the font's size should be roughly 1.55% of the window's overall width. This means that if the browser size changes thnthe size will change relative to the new overall width.*/
}

header nav ul li a{
    padding: 10px 15px;
    font-weight: lighter;
    font-size: 1.55vs;/*vw=is a unit of measurement that stands for viewport width*/
}

header nav ul li a:hover{
    background: var(--primary-color);
    color: var(--secondary-color);
    border-radius: 15px;
    text-shadow: none;
}

header h1{
    font-weight: bold;
    font-size: 36px;
    color: var(--secondary-color);
    margin: 0;
}

/* Footer styles start*/
footer{
    background-color: var(--primary-color);
    width: 100%;
    padding: 40px 35px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

footer h2{
    color: var(--secondary-color);
    font-size: 30px;
    margin: 0;
}

footer div{ 
    line-height: 1.5;
    text-align: right;
}

footer a{ 
    color: var(--secondary-color);
}

/*footer style ends*/

/*style section tags*/
section {
    padding: 60px;
}

/*Hero style css starts*/
.hero {
    background-image: url("../images/hero-bg.jpg");
    background-size:cover;
    background-position: center;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    align-items: flex-start;
    background-position: 80%;
    background-attachment: fixed;
}
/*Hero style css ends*/

/*Hero form style starts*/
 /*that line for border is the shorthand for border-style, border-width, and border-color*/
.hero-form{
    border-style: solid;
    border-width: 3px;
    border-color: #023e76;
    background-color: var(--primary-color);
    color: var(--secondary-color);
    margin: 3.5%;
    width: 40%;
}

.hero-cta{
    width: 35%;
    text-align: right;
    margin: 3.5%;
    color: #fff;
    font-size: 18px;
    line-height: 1.2;
}

.hero-cta h2{
    font-style: italic;
    font-size: 55px;
    color: var(--primary-color);
}

.hero-form-heading{
    font-size: 24px;
    margin: 0;
}

/*This makes the paragraph element in the hero form more pleasent to look read*/
.hero-form p{
    margin: 5px 0 15px 0;
}

.form-input{
    border: 1px solid var(--secondary-color);
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color:var(--secondary-color);
    width: 100%;
    margin-bottom: 15px;
    background-color: rgba(255, 255, 255, 0.75);
}

.form-input:focus{
    background-color: rgba(255, 255, 255, 1);
    outline: none;/*Removes the border defaulted added making an extra rec*/
}

.hero-form label{
    margin: 0 5px;
}

.hero-form button{
    background-color: var(--secondary-color);
    color: var(--primary-color);
    border: none;
    padding: 10px 20px;
    font-size: 16px;
}

.hero-form button:hover{
    background-color: var(--tetiary-color);
}

.checkbox-wrapper input, .radio-wrapper input{
    opacity: 0;
}

.checkbox-wrapper label, .radio-wrapper label{
    position: relative;
    left: 10px;
    margin: 10px;
    line-height: 1.6;
}

.checkbox-wrapper label{
    left: 25px;
}

.checkbox-wrapper label::before, .radio-wrapper label::before{
    content: " ";
    height: 20px;
    width: 20px;
    background: rgba(255, 255, 255, 0.75);
    border: 1px solid var(--secondary-color);
    position: absolute;
    top: -4px;
    left: -30px;
}

.radio-wrapper label::before{
    border-radius: 50%;
}

.radio-wrapper label::after{
    content: "";
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: var(--secondary-color);
    position: absolute;
    left: -29px;
    top: -3px;
    background-image: radial-gradient(circle, #39a6b2, #024e76);
}

.checkbox-wrapper label::after{
    content: "";
    height: 6px;
    width: 14px;
    border-left: 2px solid var(--secondary-color);
    border-bottom: 2px solid var(--secondary-color);
    position: absolute;
    left: -26px;
    top: 1px;
    transform: rotate(-58deg);
}

.checkbox-wrapper input + label::after , .radio-wrapper input + label::after{
    content: none;
}

.checkbox-wrapper input:checked + label::after , .radio-wrapper input:checked + label::after{
    content: "";
}
/*Hero style ends*/

/* This below sections help prevent duplicities in your code. ex .steps h2 and .intro h2*/
.section-title{
    font-size: 48px;
    color: var(--secondary-color);
    border-bottom: 3px solid;/*this puts an underline (bottom border) under the header*/
    padding-bottom: 20px;
    text-align: center;
    margin: 0 auto 35px auto;
    width: 50%;
}

.primary-border{
    border-color: var(--primary-color);
}

.secondary-border{
    border-color: var(--tetiary-color);
}


/* text-align puts the text into the centre and not on the right or left (similar to word)*/

.intro p{
    line-height: 1.7;
    color: var(--tetiary-color);
    width: 80%;
    font-size: 20px;
    margin: 0 auto; /*you can use display:inline-block if you wanted but margin:0 centers a block element with a width of less than 100%*/ 
    /* Also auto caculates the margins for us and centres the block element accordingly*/
    text-align: center;
}

.steps{
    background: var(--primary-color);
}

.step h3{
    color: var(--secondary-color);
    font-size: 46px;
    flex: 1 30%;
}

.step-text p{
    color: var(--tetiary-color);
    font-size: 18px;
}

.step-text h4{
    font-size: 26px;
    line-height: 1.5;
    color: var(--secondary-color);
}

.step{
    margin: 50px;
    padding-bottom: 50px;
    width: 80%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
}

.step:not(:last-child){
    border-bottom: 1px solid var(--tetiary-color);/*Applies a bottom border to all the step childs except the last one*/
}

.step-info{
    flex: 2 70%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.step-img{
    flex: 1 12%;
    margin-right: 20px;
}

.step-text{
    flex: 12;
}

.step-img img{
    max-width: 100%;
}
.trainers{
    width: 100%;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}
/*the reason we use overflow in this case is that with a float-based layout we floated both child elements in the parent element which made it seem as if there isn't anything in the parent element. overflow told the parent (artcle in this case) that it needs to account for the content inside it (aka block formatting context)*/
.trainer{
    margin: 20px;
    background-color: #var(--secondary-color);
    color: #fce138;
    flex: 1;
}

.trainer img{
    width: 100%;
}

.trainer-bio{
    padding: 25px;
    line-height: 1.3;
}

.text-left{
    text-align: left;
}
.text-right{
    text-align: right;
}

.trainer-bio h3{
    font-size: 28px;
}

.trainer-bio h4{
    font-weight: lighter;
    font-size: 22px;
    margin-bottom: 15px;
}

.trainer-bio p{
    font-size: 17px;
}

.contact {
    background-color: var(--secondary-color);
}

.contact h2{
    color: var(--primary-color);
}

.contact-info{
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

/*the * selector= select all elements that are direct children of anything with class contact.info in this case. and > symbol=look sepcifically for direct children of the element lists first*/
.contact.info > *{
    flex: 1;
    margin: 15px;
}

.contact-info iframe{
    height: 400px;
}

.contact-info div{
    color: white;
}

.contact-info h3{
    color: var(--primary-color);
    font-size: 32px;
}

.contact-info p, .contact-info address{
    margin: 20px 0;
    line-height: 1.5;
    font-size: 16px;
    font-style: normal;
}

.contact-info a{
    color: var(--primary-color);
} 

.flex-row {
    display: flex;
}

.contact-form input, .contact-form textarea{
    border: 1px solid var(--secondary-color);
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: var(--secondary-color);
    width: 100%;
    margin-bottom: 15px;
    margin-top: 5px;
    background-color: rgba(255, 255, 255, 0.75);
}

.contact-form input:focus, .contact-form textarea:focus{
    background-color: rgba(255, 255, 255, 1);
    outline: none;
}
.contact-form button{
    width: 100%;
    border: none;
    background: var(--primary-color);
    color: var(--secondary-color);
    text-align: center;
    padding: 15 px 0;
    font-size: 16px;
}

.contact-form button:hover{
    color: var(--primary-color);
    background: var(--tetiary-color);
}

/*ADDING ASTHETICS*/

header h1 {
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

header nav ul li a{
    text-shadow: rgba(0, 0, 0, 0.5);
}

.hero-cta h2{
    text-shadow: rgba(0, 0, 0, 0.5);

}

.hero-form {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    background-color: rgba(255, 255, 56, 0.8);
    border-radius: 15px;
}

.form-input{
    border-radius: 15px;
}

.hero-form button{
    border-radius: 15px;
}

.contact-form input, .contact-form textarea{
    border-radius: 15px;
}

.contact-form button{
    border-radius: 15px;
}





@media screen and (max-width: 980px) {
    header {
        padding-bottom: 0;
        justify-content: center;
        position: relative;/*Removes sticky features of header for mobile or smaller screens. Allows for better user experience */
      }
    
      header h1 {
        width: 100%;
        text-align: center;
      }
    
      header nav ul {
        margin-top: 20px;
        width: 100%;
        justify-content: center;
      }
    
      header nav ul li a {
        font-size: 20px;
      }
    
      footer h2, footer div {
        text-align: center;
        width: 100%;
      }

      .hero-cta, .hero-form {
        width: 100%;
      }
      
      .hero-cta {
        text-align: center;
      }

      .section-title {
        width: 80%;
      }
      
      .trainer {
        flex: 0 70%;
      }
      
      .contact-info iframe{
        flex: 1 100%;
      }
  }
  
  
  @media screen and (max-width: 768px) {
    section {
      padding: 30px 15px;
    }

    .step h3{
        flex: 1 100%;
        text-align: center;
    }

    .step-info{
        flex: 2 100%;
        text-align: center;
        justify-content: center;
    }

    .step-img{
        flex: 0 32%;
        margin-right: 0;
        margin-top: 15px;
        margin-bottom: 15px;
    }

    .step-text{
        flex: 100%;
    }
  }
  
  
  @media screen and (max-width: 575px) {

    .hero-form button{
        width: 100%;
    }

    .section-title{
        width: 95%;
    }

    .intro p{
        width: 100%;
    }

    .trainer{
        flex: 0 100%;
    }

    .contact-info{
        text-align: center;
    }

    .contact-info > *{
        flex: 0 100%;
    }

    .contact-form {
        order: 3;
    }
  }