 *{
     margin: 0;
     padding: 0;
     box-sizing:border-box; /*this gets rid of the issue of mixed padding values and width. Ex the header has 35px right and left which equals 70 but the footer width is at 100% making it flow off the page*/
 }

 body {
     /*setting the color of the font for the entire page to that hexadecimal number */
     color: #39a6b2;
     font-family: Helvetica, Arial, sans-serif;
    }
 
 /* Applies 20px to every side (top, right, bottom, left) */
 header {
    padding: 20px 35px;
    background-color: #39a6b2;
    display: flex;/*the flex distributes the space amoung the child elements and overrides the block-level behaviours of the elements*/
    justify-content: space-between; /*this puts all of the unused space in the header value betwn the two elements (nav and h1) and determines the unsued spave by adding up the border-width, margin, padding and content of each child element and if deosn't equal 100% then whatever is left over is considered unused*/
    flex-wrap: wrap; /*instructs the container to let chid elements break onto the next line when they don't fit on one line*/
    }
 
header h1 {
    font-weight: bold;
    font-size: 36px;
    color: #fce138;
    margin: 0;
    }

header a {
    text-decoration: none;
    color: #fce138;
}

header nav{
    margin: 7px 0;
}

header nav ul{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;/* horizontally centers the content; follows the main axis*/
    align-items: center; /* vertically centers the content; follows the cross axis*/
    list-style: none;/*sets how a listitems is styles and positioned; aka the actual browser window size. So by added 1.55 we are telling the browswe that the font's size should be roughly 1.55% of the window's overall width. This means that if the browser size changes thnthe size will change relative to the new overall width.*/
}

header nav ul li a{
    margin: 0 30px;
    font-weight: lighter;
    font-size: 1.55vs;/*vw=is a unit of measurement that stands for viewport width*/
}

header h1{
    font-weight: bold;
    font-size: 36px;
    color:#fce138;
    margin: 0;
}

/* Footer styles start*/
footer{
    background-color: #fce138;
    width: 100%;
    padding: 40px 35px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

footer h2{
    color: #024e76;
    font-size: 30px;
    margin: 0;
}

footer div{ 
    line-height: 1.5;
    text-align: right;
}

footer a{ 
    color: #024e76;
}

/*footer style ends*/

/*style section tags*/
section {
    padding: 60px;
}

/*Hero style css starts*/
.hero {
    background-image: url("../images/hero-bg.jpg");
    background-size:cover;
    background-position: center;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}
/*Hero style css ends*/

/*Hero form style starts*/
.hero-form{
    background-color: #fce138;
    padding: 20ps;
    width: 500px;
    color: #024e76;
}
 /*that line for border is the shorthand for border-style, border-width, and border-color*/
.hero-form{
    border-style: solid;
    border-width: 3px;
    border-color: #023e76;
    background-color: #fce138;
    color: #024e76;
    position: absolute;
    margin: 3.5%;
    width: 40%;
}

.hero-cta{
    width: 35%;
    text-align: right;
    margin: 3.5%;
    color: #fff;
    font-size: 18px;
    line-height: 1.3;
}

.hero-cta h2{
    font-style: italic;
    font-size: 55px;
    color: #fce138;
}
/* ... is just a placeholde that indicates that there's other content in the code that shouldn't be overwritten.*/

.hero-form-heading{
    font-size: 24px;
    margin: 0;
}

/*This makes the paragraph element in the hero form more pleasent to look read*/
.hero-form p{
    margin: 5px 0 15px 0;
}

.form-input{
    border: 1px solid #024e76;
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color:#024e76;
    width: 100%;
    margin-bottom: 15px;
}

.hero-form label{
    margin: 0 5px;
}

.hero-form button{
    background-color: #024e76;
    color: #fce138;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
}
/*Hero style ends*/

/* This below sections help prevent duplicities in your code. ex .steps h2 and .intro h2*/
.section-title{
    font-size: 55px;
    color: #024e76;
    border-bottom: 3px solid;/*this puts an underline (bottom border) under the header*/
    padding-bottom: 20px;
    text-align: center;
    margin: 0 auto 35px auto;
    width: 50%;
}

.primary-border{
    border-color: #fce138;
}

.secondary-border{
    border-color: #39a6b2;
}


/* text-align puts the text into the centre and not on the right or left (similar to word)*/

/* This is replaces with section-title as it is repeated here and in .steps h2. no need to repeat code
.intro h2{
    font-size: 55px;
    color: #024e76;
    margin-bottom: 35px;
    padding: 0 100px 20px 100px;
    border-bottom: 3px solid; 
    border-color: #fce138;
    display: inline-block;
}*/


.intro p{
    line-height: 1.7;
    color: #39a6b2;
    width: 80%;
    font-size: 20px;
    margin: 0 auto; /*you can use display:inline-block if you wanted but margin:0 centers a block element with a width of less than 100%*/ 
    /* Also auto caculates the margins for us and centres the block element accordingly*/
    text-align: center;
}

.steps{
    background: #fce138;
}

.step h3{
    color: #024e76;
    font-size: 46px;
    flex: 1 30%;
}

.step-text p{
    color: #39a6b2;
    font-size: 18px;
}

.step-text h4{
    font-size: 26px;
    line-height: 1.5;
    color: #024e76;
}

.step{
    margin: 50px;
    padding-bottom: 50px;
    width: 80%;
    border-bottom: 1px solid #39a6b2;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
}

.step-info{
    flex: 2 70%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.step-img{
    flex: 1 12%;
    margin-right: 20px;
}

.step-text{
    flex: 12;
}

.step-img img{
    max-width: 100%;
}
.trainers{
    text-align: center;
}
/*the reason we use overflow in this case is that with a float-based layout we floated both child elements in the parent element which made it seem as if there isn't anything in the parent element. overflow told the parent (artcle in this case) that it needs to account for the content inside it (aka block formatting context)*/
.trainer{
    width: 900px;
    margin: 0 auto 30px auto;
    background-color: #024e76;
    color: #fce138;
    overflow: auto;
}

.trainer img{
    width: 35%;
    float: left;
}

.trainer-bio{
    padding: 35px;
    float: left;
    width: 65%;
}

.text-left{
    text-align: left;
}
.text-right{
    text-align: right;
}

.trainer-bio h3{
    font-size: 32px;
    margin-bottom: 8px;
}

.trainer-bio h4{
    font-weight: lighter;
    font-size: 26px;
    margin-bottom: 25px;
}

.trainer-bio p{
    font-size: 17px;
    line-height: 1.3;
}

.contact {
    background-color: #023e76;
}

.contact h2{
    color: #fce138;
}

.contact-info iframe{
    width: 400px;
    height: 400px;
}

.contact-info div{
    width: 410px;
    display: inline-block;
    vertical-align: top;
    text-align: left;
    margin: 30px 0 0 60px;
    color: white;
}

.contact-info h3{
    color: #fce138;
    font-size: 32px;
}

.contact-info p, .contact-info address{
    margin: 20px 0;
    line-height: 1.5;
    font-size: 20px;
    font-style: normal;
}

.contact-info a{
    color: #fce138;
} 

.flex-row {
    display: flex;
}

/*Also replaced by section-title
.steps h2{
    font-size: 55px;
    color: #024e76;
    margin-bottom: 35px;
    padding: 0 100px 20px 100px;
    border-bottom: 3px solid;
    border-color: #39a6b2;
    display: inline-block;
}*/